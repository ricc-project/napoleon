# Generated by Django 2.2.1 on 2019-05-29 17:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataCluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collected_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('hash', models.CharField(max_length=128)),
                ('authToken', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='WindData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.FloatField()),
                ('direction', models.PositiveIntegerField()),
                ('data_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.DataCluster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolarData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('radiation', models.PositiveIntegerField()),
                ('data_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.DataCluster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoilData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moisture', models.FloatField()),
                ('temperature', models.FloatField()),
                ('data_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.DataCluster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RainData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rainfall', models.PositiveIntegerField()),
                ('data_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.DataCluster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='datacluster',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.User'),
        ),
        migrations.CreateModel(
            name='AirData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('humidity', models.FloatField()),
                ('temperature', models.FloatField()),
                ('pressure', models.FloatField()),
                ('data_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.DataCluster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ActuatorData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('data_cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.DataCluster')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
